name: Nexon API 키 테스트 (카테고리 없음)

on:
  workflow_dispatch:  # 수동 실행 옵션

jobs:
  test-api-keys:
    runs-on: ubuntu-latest
    steps:
      - name: API 키 테스트 (카테고리 제거)
        env:
          API_KEY: ${{ secrets.API_KEY }}
          TEST_KEY: "test_46b3fb5e1112538399c48e242a8a661be0bc6e05c4155923fb7302c44f2461b5efe8d04e6d233bd35cf2fabdeb93fb0d"
        run: |
          echo "==================== API 키 테스트 시작 ===================="
          
          # 아이템 이름 설정
          ITEM_NAME="정령 형상변환 리큐르(빛의 가루)"
          echo "테스트 대상 아이템: $ITEM_NAME"
          
          # URL 인코딩 (echo -n으로 개행 문자 방지)
          ENCODED_NAME=$(echo -n "$ITEM_NAME" | jq -s -R -r @uri)
          echo "인코딩된 이름: $ENCODED_NAME"
          
          # 테스트 1: 테스트 키 (하드코딩)로 API 호출
          echo -e "\n테스트 1: 하드코딩된 테스트 키로 API 호출"
          RESPONSE1=$(curl -s -w "\n%{http_code}" -X 'GET' \
          "https://open.api.nexon.com/mabinogi/v1/auction/list?item_name=$ENCODED_NAME" \
          -H 'accept: application/json' \
          -H "x-nxopen-api-key: $TEST_KEY")
          
          HTTP_CODE1=$(echo "$RESPONSE1" | tail -n1)
          BODY1=$(echo "$RESPONSE1" | sed '$d')
          
          echo "HTTP 응답 코드: $HTTP_CODE1"
          echo "응답 본문:"
          echo "$BODY1" | jq '.' || echo "$BODY1"
          
          # 테스트 2: GitHub Secrets에 저장된 API 키로 호출
          echo -e "\n테스트 2: GitHub Secrets API 키로 호출"
          RESPONSE2=$(curl -s -w "\n%{http_code}" -X 'GET' \
          "https://open.api.nexon.com/mabinogi/v1/auction/list?item_name=$ENCODED_NAME" \
          -H 'accept: application/json' \
          -H "x-nxopen-api-key: $API_KEY")
          
          HTTP_CODE2=$(echo "$RESPONSE2" | tail -n1)
          BODY2=$(echo "$RESPONSE2" | sed '$d')
          
          echo "HTTP 응답 코드: $HTTP_CODE2"
          echo "응답 본문:"
          echo "$BODY2" | jq '.' || echo "$BODY2"
          
          # 테스트 3: 두 API 키 비교
          echo -e "\n테스트 3: API 키 비교"
          
          # 키 길이 확인
          TEST_KEY_LENGTH=${#TEST_KEY}
          STORED_KEY_LENGTH=${#API_KEY}
          
          echo "테스트 키 길이: $TEST_KEY_LENGTH"
          echo "저장된 키 길이: $STORED_KEY_LENGTH"
          
          # 키 값 일부 확인 (첫 10자, 마지막 10자)
          TEST_KEY_START=${TEST_KEY:0:10}
          TEST_KEY_END=${TEST_KEY: -10}
          
          STORED_KEY_START=${API_KEY:0:10}
          STORED_KEY_END=${API_KEY: -10}
          
          echo "테스트 키 시작: $TEST_KEY_START..."
          echo "테스트 키 끝: ...$TEST_KEY_END"
          
          echo "저장된 키 시작: $STORED_KEY_START..."
          echo "저장된 키 끝: ...$STORED_KEY_END"
          
          # 키가 같은지 확인
          if [ "$TEST_KEY" == "$API_KEY" ]; then
            echo "✅ 두 API 키가 정확히 일치합니다."
          else
            echo "❌ 두 API 키가 다릅니다!"
            
            # 차이점 위치 확인
            for ((i=0; i<$TEST_KEY_LENGTH && i<$STORED_KEY_LENGTH; i++)); do
              if [ "${TEST_KEY:$i:1}" != "${API_KEY:$i:1}" ]; then
                echo "첫 번째 불일치 위치: $i (테스트키: '${TEST_KEY:$i:1}', 저장된키: '${API_KEY:$i:1}')"
                break
              fi
            done
          fi
